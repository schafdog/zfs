#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#

#
# Copyright (c) 2012 by Delphix. All rights reserved.
#

typeset -a compress_props=('on' 'off' 'lzjb' 'gzip' 'gzip-1' 'gzip-2' 'gzip-3'
    'gzip-4' 'gzip-5' 'gzip-6' 'gzip-7' 'gzip-8' 'gzip-9' 'zle' 'lz4')

typeset -a checksum_props=('on' 'off' 'fletcher2' 'fletcher4' 'sha256')

#
# Given the property array passed in, return 'num_props' elements to the
# user, excluding any elements below 'start.' This allows us to exclude
# 'off' and 'on' which can be either unwanted, or a duplicate of another
# property respectively.
#
function get_rand_prop
{
	typeset prop_array=($(eval echo \${$1[@]}))
	typeset -i num_props=$2
	typeset -i start=$3
	typeset retstr=""

	[[ -z $prop_array || -z $num_props || -z $start ]] && \
	    log_fail "get_rand_prop: bad arguments"

	typeset prop_max=$((${#prop_array[@]} - 1))
	typeset -i i
	for i in $($SHUF -i $start-$prop_max -n $num_props); do
		retstr="${prop_array[$i]} $retstr"
	done
	echo $retstr
}

function get_rand_compress
{
	get_rand_prop compress_props $1 2
}

function get_rand_compress_any
{
	get_rand_prop compress_props $1 0
}

function get_rand_checksum
{
	get_rand_prop checksum_props $1 2
}

function get_rand_checksum_any
{
	get_rand_prop checksum_props $1 0
}

#
# Functions to toggle on/off properties
#
typeset -a binary_props=('atime' 'devices' 'exec' 'readonly' 'setuid' 'xattr'
    'zoned')

if is_linux; then
	# Only older kernels support non-blocking mandatory locks
	if [[ $(linux_version) -lt $(linux_version "4.4") ]]; then
		binary_props+=('nbmand')
	fi
else
	binary_props+=('nbmand')
fi

function toggle_prop
{
	typeset ds=$1
	typeset prop=$2

	datasetexists $ds || log_fail "$ds does not exist"
	typeset val=$(get_prop $prop $ds)
	typeset newval='off'

	[[ $val = $newval ]] && newval='on'
	log_must zfs set $prop=$newval $ds
}

function toggle_binary_props
{
	typeset ds=$1
	typeset prop

	for prop in "${binary_props[@]}"; do
		toggle_prop $ds $prop
	done
}

function randomize_ds_props
{
	typeset ds=$1
	typeset prop proplist val

	datasetexists $ds || log_fail "$ds does not exist"
	if ds_is_volume $ds; then
		toggle_prop $ds readonly
		proplist="${vol_props[@]}"
	elif ds_is_filesystem $ds; then
		toggle_binary_props $ds
		proplist="${fs_props[@]}"
	else
		log_fail "$ds is neither a volume nor a file system"
	fi

	for prop in $proplist; do
		typeset val=$(get_rand_prop "${prop}_prop_vals" 1 0)
		log_must zfs set $prop=$val $ds
	done
}
